{"version":3,"sources":["webpack:///./src/pages/publications.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["PublicationsPage","title","class","href","Layout","children","data","useStaticQuery","siteTitle","site","siteMetadata","role","SEO","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"8FAAA,oEAmBeA,UAbU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,iBACX,yBAAKC,MAAM,oEACT,yBAAKA,MAAM,UACT,4CACA,khBACA,4BAAI,uBAAGC,KAAK,2EAAR,wB,kCCbZ,yIAkEeC,IA3CA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVC,EAAOC,yBAAe,cAU5B,OACE,oCACE,kBAAC,IAAD,CAAQC,WAAW,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBT,QAAxB,UAEnB,6BACE,0BAAMU,KAAK,QACT,yBAAKT,MAAM,4BACT,yBAAKA,MAAM,OAET,yBAAKA,MAAM,+BACRG,GAGH,yBAAKH,MAAM,mCACT,kBAAC,IAAD,MACA,6BACA,kBAAC,IAAD,WAOV,kBAAC,IAAD,S,kCCzDN,iDAYA,SAASU,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMd,EAAS,EAATA,MAC9BQ,EAASF,yBAAe,YAAxBE,KAcFO,EAAkBH,GAAeJ,EAAKC,aAAaG,YACnDI,EAAY,UAAGR,EAAKC,oBAAR,aAAG,EAAmBT,MAExC,OACE,kBAAC,IAAD,CACEiB,eAAgB,CACdJ,QAEFb,MAAOA,EACPkB,cAAeF,EAAY,QAAWA,EAAiB,KACvDF,KAAM,CACJ,CACEK,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASpB,GAEX,CACEqB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAZ,EAAKC,oBAAL,eAAmBa,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAASpB,GAEX,CACEmB,KAAK,sBACLC,QAASL,IAEXQ,OAAOT,KAKfH,EAAIa,aAAe,CACjBX,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-publications-js-e5179c5b18b03e130ea1.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst PublicationsPage = () => (\n  <Layout>\n    <SEO title=\"Publications\" />\n    <div class=\"row mb-4 px-3 pt-4 pb-2 bg-wash tw-border-b-4 tw-border-gray-600\">\n      <div class=\"col-12\">\n        <h4>Publications</h4>\n        <p>Citations to the BRC resource as measured Google Scholar searches using predetermined set of keywords based on name and/or acronym of each of the BRC resources, and additional keywords to filter out any false positive or negative results to the extent possible. This is complementary to the citations to the BRC publications described above and necessary because, often, users cite BRC resources by mentioning the resource name or URL in the manuscript text, instead of citing relevant publications.</p>\n        <h4><a href=\"https://scholar.google.com/citations?user=kXLGwkYAAAAJ&hl=en&authuser=2\">Google Scholar</a></h4>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default PublicationsPage","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"../styles/tailwind.min.css\"\nimport \"../styles/bootstrap-4.3.1.css\"\nimport \"../styles/brc-mockup.css\"\nimport \"../styles/global.css\"\n\nimport \"../scripts/fa5.min.js\"\n\nimport Header from \"./Header\"\nimport Calendar from \"./Calendar\"\nimport Twitter from \"./Twitter\"\nimport Footer from \"./Footer\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n\n      <div>\n        <main role=\"main\">\n          <div class=\"container-fluid max-1600\">\n            <div class=\"row\">\n\n              <div class=\"col-md-8 col-lg-9 px-5 pt-3\">\n                {children}\n              </div>\n\n              <div class=\"col-md-4 col-lg-3 news-col mt-4\">\n                <Calendar></Calendar>\n                <hr />\n                <Twitter></Twitter>\n              </div>\n\n            </div>\n          </div>\n        </main>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}